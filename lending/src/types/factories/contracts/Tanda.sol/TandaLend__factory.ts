/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TandaLend,
  TandaLendInterface,
} from "../../../contracts/Tanda.sol/TandaLend";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "cfa",
        type: "address",
      },
      {
        internalType: "contract ISuperToken",
        name: "acceptedToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "daoToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "BorrowerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "agreementClass",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "agreementData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "cbdata",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "afterAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "newCtx",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "agreementClass",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "agreementData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "cbdata",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "afterAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "newCtx",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "agreementClass",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "agreementData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "cbdata",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "afterAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "newCtx",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "agreementClass",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "agreementData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "beforeAgreementCreated",
    outputs: [
      {
        internalType: "bytes",
        name: "cbdata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "agreementClass",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "agreementData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "beforeAgreementTerminated",
    outputs: [
      {
        internalType: "bytes",
        name: "cbdata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "agreementClass",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "agreementId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "agreementData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ctx",
        type: "bytes",
      },
    ],
    name: "beforeAgreementUpdated",
    outputs: [
      {
        internalType: "bytes",
        name: "cbdata",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWinner",
    outputs: [
      {
        internalType: "uint256",
        name: "drawingTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daoToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017c5380380620017c5833981016040819052620000349162000189565b6200003f3362000120565b6001600160a01b038416620000585762000058620001f1565b6001600160a01b038316620000715762000071620001f1565b6001600160a01b0382166200008a576200008a620001f1565b600180546001600160a01b03199081166001600160a01b03878116918217845560028054841688831617905560038054909316908616179091556040516315a722b960e31b81526004810183905263ad3915c890602401600060405180830381600087803b158015620000fc57600080fd5b505af115801562000111573d6000803e3d6000fd5b50505050505050505062000207565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200018657600080fd5b50565b60008060008060808587031215620001a057600080fd5b8451620001ad8162000170565b6020860151909450620001c08162000170565b6040860151909350620001d38162000170565b6060860151909250620001e68162000170565b939692955090935050565b634e487b7160e01b600052600160045260246000fd5b6115ae80620002176000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a611610081578063aabe2fe31161005b578063aabe2fe314610176578063d86ed3e5146100ce578063f2fde38b146101a457600080fd5b8063715018a61461015b578063884d1f40146100f75780638da5cb5b1461016557600080fd5b80634914b030116100b25780634914b0301461010a57806353c11f99146101355780635f9e7d771461014857600080fd5b8063230dbd29146100ce57806330d9c915146100f7575b600080fd5b6100e16100dc366004610f65565b6101b7565b6040516100ee919061108c565b60405180910390f35b6100e16101053660046110a6565b610246565b60045461011d906001600160a01b031681565b6040516001600160a01b0390911681526020016100ee565b6100e1610143366004610f65565b6103b7565b6100e16101563660046110a6565b610492565b610163610571565b005b6000546001600160a01b031661011d565b61017e6105d7565b604080519384526001600160a01b039092166020840152600b0b908201526060016100ee565b6101636101b2366004611145565b61068d565b6001546060906001600160a01b031633146102285760405162461bcd60e51b815260206004820152602660248201527f4c6f747465727953757065724170703a20737570706f7274206f6e6c79206f6e60448201526519481a1bdcdd60d21b60648201526084015b60405180910390fd5b61023683838b8b898961076f565b90505b9998505050505050505050565b6001546060906001600160a01b031633146102b25760405162461bcd60e51b815260206004820152602660248201527f4c6f747465727953757065724170703a20737570706f7274206f6e6c79206f6e60448201526519481a1bdcdd60d21b606482015260840161021f565b87876102cc826003546001600160a01b0391821691161490565b6103245760405162461bcd60e51b815260206004820152602360248201527f4c6f747465727953757065724170703a206e6f7420616363657074656420746f60448201526235b2b760e91b606482015260840161021f565b61032d81610877565b61039f5760405162461bcd60e51b815260206004820152602560248201527f4c6f747465727953757065724170703a206f6e6c79204346417631207375707060448201527f6f72746564000000000000000000000000000000000000000000000000000000606482015260840161021f565b6103a98585610903565b9a9950505050505050505050565b6001546060906001600160a01b031633146104235760405162461bcd60e51b815260206004820152602660248201527f4c6f747465727953757065724170703a20737570706f7274206f6e6c79206f6e60448201526519481a1bdcdd60d21b606482015260840161021f565b600061043185870187611162565b905080156104795783838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509294506102399350505050565b6104838484610a65565b9b9a5050505050505050505050565b6001546060906001600160a01b031633146104fe5760405162461bcd60e51b815260206004820152602660248201527f4c6f747465727953757065724170703a20737570706f7274206f6e6c79206f6e60448201526519481a1bdcdd60d21b606482015260840161021f565b6003546001600160a01b038981169116141580610521575061051f87610877565b155b15610548576040805160016020820152016040516020818303038152906040529050610566565b60408051600060208201520160405160208183030381529060405290505b979650505050505050565b6000546001600160a01b031633146105cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021f565b6105d56000610b1e565b565b600654600090819081906001600160a01b03161561068857600254600354600654604051631cd43d1160e31b81526001600160a01b039283166004820152306024820152908216604482015291169063e6a1e88890606401608060405180830381865afa15801561064c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610670919061119b565b50506006549194506001600160a01b03909116925090505b909192565b6000546001600160a01b031633146106e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021f565b6001600160a01b0381166107635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161021f565b61076c81610b1e565b50565b6060600061077f83850185611145565b600354604051631557a4cd60e31b81526001600160a01b039182166004820152602481018890529192506000919088169063aabd266890604401608060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa919061119b565b5050915050671bc16d674ec80000600b0b81600b0b121560405180606001604052806022815260200161158060229139906108485760405162461bcd60e51b815260040161021f919061108c565b506001600160a01b0382166000908152600560205260409020805460ff19166001179055610239828a8a610b7b565b60007fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3826001600160a01b0316637730599e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc91906111d7565b1492915050565b600154604051631fb6491d60e11b81526060916000916001600160a01b0390911690633f6c923a9061093b90879087906004016111f0565b600060405180830381865afa158015610958573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610980919081019061131b565b6004805460608301516040516370a0823160e01b81526001600160a01b039182169381019390935292935060009216906370a0823190602401602060405180830381865afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa91906111d7565b1160405180606001604052806024815260200161155c6024913990610a325760405162461bcd60e51b815260040161021f919061108c565b506060810151604080516001600160a01b0390921660208301520160405160208183030381529060405291505092915050565b600154604051631fb6491d60e11b81526060916000916001600160a01b0390911690633f6c923a90610a9d90879087906004016111f0565b600060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ae2919081019061131b565b6060810180516001600160a01b03166000908152600560205260409020805460ff1916905551909150610b16908585610b7b565b949350505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03831660009081526005602052604090205460609060ff16610be65760405162461bcd60e51b815260206004820152601560248201527f424f52524f574552206e6f7420696e2054616e64610000000000000000000000604482015260640161021f565b600680546001600160a01b0386811673ffffffffffffffffffffffffffffffffffffffff19831617909255604080516020601f870181900481028201810190925285815292909116919085908590819084018382808284376000920191909152509294505050506001600160a01b03811615610d4f576001546002546003546040805160008152602081019091526001600160a01b0393841693634329d29393811692635a5999e360e11b92610ca792909116903090889060448101611422565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199485161790525160e085901b9092168252610d0492918790600401611456565b6000604051808303816000875af1158015610d23573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d4b91908101906114a7565b5091505b6006546001600160a01b031615610ebf5760015460025460035460065460405163e8e7e2d160e01b81526001600160a01b039283166004820181905230602483015294831694634329d2939484169363317e182f60e11b939192911690849063e8e7e2d190604401602060405180830381865afa158015610dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df8919061150b565b604080516000815260208101909152610e179392919060448101611526565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199485161790525160e085901b9092168252610e7492918790600401611456565b6000604051808303816000875af1158015610e93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ebb91908101906114a7565b5091505b6006546040516001600160a01b0390911681527fa1cc029f3440726d0dd25b6385e24d209e5bf7817d6662d6e4bfdfbc621c1cf29060200160405180910390a1509392505050565b6001600160a01b038116811461076c57600080fd5b60008083601f840112610f2e57600080fd5b50813567ffffffffffffffff811115610f4657600080fd5b602083019150836020828501011115610f5e57600080fd5b9250929050565b600080600080600080600080600060c08a8c031215610f8357600080fd5b8935610f8e81610f07565b985060208a0135610f9e81610f07565b975060408a0135965060608a013567ffffffffffffffff80821115610fc257600080fd5b610fce8d838e01610f1c565b909850965060808c0135915080821115610fe757600080fd5b610ff38d838e01610f1c565b909650945060a08c013591508082111561100c57600080fd5b506110198c828d01610f1c565b915080935050809150509295985092959850929598565b60005b8381101561104b578181015183820152602001611033565b8381111561105a576000848401525b50505050565b60008151808452611078816020860160208601611030565b601f01601f19169290920160200192915050565b60208152600061109f6020830184611060565b9392505050565b600080600080600080600060a0888a0312156110c157600080fd5b87356110cc81610f07565b965060208801356110dc81610f07565b955060408801359450606088013567ffffffffffffffff8082111561110057600080fd5b61110c8b838c01610f1c565b909650945060808a013591508082111561112557600080fd5b506111328a828b01610f1c565b989b979a50959850939692959293505050565b60006020828403121561115757600080fd5b813561109f81610f07565b60006020828403121561117457600080fd5b8135801515811461109f57600080fd5b8051600b81900b811461119657600080fd5b919050565b600080600080608085870312156111b157600080fd5b845193506111c160208601611184565b6040860151606090960151949790965092505050565b6000602082840312156111e957600080fd5b5051919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156112595761125961121f565b60405290565b805160ff8116811461119657600080fd5b805161119681610f07565b80516001600160e01b03198116811461119657600080fd5b600082601f8301126112a457600080fd5b815167ffffffffffffffff808211156112bf576112bf61121f565b604051601f8301601f19908116603f011681019082821181831017156112e7576112e761121f565b8160405283815286602085880101111561130057600080fd5b611311846020830160208901611030565b9695505050505050565b60006020828403121561132d57600080fd5b815167ffffffffffffffff8082111561134557600080fd5b90830190610160828603121561135a57600080fd5b611362611235565b61136b8361125f565b81526113796020840161125f565b60208201526040830151604082015261139460608401611270565b60608201526113a56080840161127b565b608082015260a0830151828111156113bc57600080fd5b6113c887828601611293565b60a08301525060c083015160c082015260e083015160e08201526101009150818301518282015261012091506113ff828401611270565b828201526101409150611413828401611270565b91810191909152949350505050565b60006001600160a01b0380871683528086166020840152808516604084015250608060608301526113116080830184611060565b6001600160a01b03841681526080602082015260006114786080830185611060565b8281038060408501526002825261060f60f31b6020830152604081016060850152506113116040820185611060565b600080604083850312156114ba57600080fd5b825167ffffffffffffffff808211156114d257600080fd5b6114de86838701611293565b935060208501519150808211156114f457600080fd5b5061150185828601611293565b9150509250929050565b60006020828403121561151d57600080fd5b61109f82611184565b60006001600160a01b03808716835280861660208401525083600b0b604083015260806060830152611311608083018461106056fe4c6f747465727953757065724170703a206e656564207469636b657420746f20706c61794c6f747465727953757065724170703a20666c6f77207261746520746f6f206c6f77a164736f6c634300080d000a";

type TandaLendConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TandaLendConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TandaLend__factory extends ContractFactory {
  constructor(...args: TandaLendConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    host: string,
    cfa: string,
    acceptedToken: string,
    daoToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TandaLend> {
    return super.deploy(
      host,
      cfa,
      acceptedToken,
      daoToken,
      overrides || {}
    ) as Promise<TandaLend>;
  }
  override getDeployTransaction(
    host: string,
    cfa: string,
    acceptedToken: string,
    daoToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      host,
      cfa,
      acceptedToken,
      daoToken,
      overrides || {}
    );
  }
  override attach(address: string): TandaLend {
    return super.attach(address) as TandaLend;
  }
  override connect(signer: Signer): TandaLend__factory {
    return super.connect(signer) as TandaLend__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TandaLendInterface {
    return new utils.Interface(_abi) as TandaLendInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TandaLend {
    return new Contract(address, _abi, signerOrProvider) as TandaLend;
  }
}
