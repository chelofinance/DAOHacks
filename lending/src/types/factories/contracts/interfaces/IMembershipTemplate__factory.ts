/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IMembershipTemplate,
  IMembershipTemplateInterface,
} from "../../../contracts/interfaces/IMembershipTemplate";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint64[3]",
        name: "_votingSettings",
        type: "uint64[3]",
      },
      {
        internalType: "uint64",
        name: "_financePeriod",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_useAgentAsVault",
        type: "bool",
      },
      {
        internalType: "uint256[4]",
        name: "_payrollSettings",
        type: "uint256[4]",
      },
    ],
    name: "newInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint64[3]",
        name: "_votingSettings",
        type: "uint64[3]",
      },
      {
        internalType: "uint64",
        name: "_financePeriod",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_useAgentAsVault",
        type: "bool",
      },
    ],
    name: "newInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "newToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "uint64[3]",
        name: "_votingSettings",
        type: "uint64[3]",
      },
      {
        internalType: "uint64",
        name: "_financePeriod",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_useAgentAsVault",
        type: "bool",
      },
    ],
    name: "newTokenAndInstance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IMembershipTemplate__factory {
  static readonly abi = _abi;
  static createInterface(): IMembershipTemplateInterface {
    return new utils.Interface(_abi) as IMembershipTemplateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMembershipTemplate {
    return new Contract(address, _abi, signerOrProvider) as IMembershipTemplate;
  }
}
