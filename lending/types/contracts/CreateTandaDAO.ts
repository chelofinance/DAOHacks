/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";

export interface CreateTandaDAOInterface extends utils.Interface {
  functions: {
    "createTandaDAO(string,address[],uint64[3],address,address,address)": FunctionFragment;
    "daoToTanda(string)": FunctionFragment;
    "template()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "createTandaDAO" | "daoToTanda" | "template"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createTandaDAO",
    values: [
      string,
      string[],
      [BigNumberish, BigNumberish, BigNumberish],
      string,
      string,
      string
    ]
  ): string;
  encodeFunctionData(functionFragment: "daoToTanda", values: [string]): string;
  encodeFunctionData(functionFragment: "template", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "createTandaDAO",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "daoToTanda", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "template", data: BytesLike): Result;

  events: {
    "TandaDAOCreated(string,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "TandaDAOCreated"): EventFragment;
}

export interface TandaDAOCreatedEventObject {
  id: string;
  tanda: string;
}
export type TandaDAOCreatedEvent = TypedEvent<
  [string, string],
  TandaDAOCreatedEventObject
>;

export type TandaDAOCreatedEventFilter = TypedEventFilter<TandaDAOCreatedEvent>;

export interface CreateTandaDAO extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CreateTandaDAOInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createTandaDAO(
      _id: string,
      _members: string[],
      _votingSettings: [BigNumberish, BigNumberish, BigNumberish],
      host: string,
      cfa: string,
      acceptedToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    daoToTanda(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    template(overrides?: CallOverrides): Promise<[string]>;
  };

  createTandaDAO(
    _id: string,
    _members: string[],
    _votingSettings: [BigNumberish, BigNumberish, BigNumberish],
    host: string,
    cfa: string,
    acceptedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  daoToTanda(arg0: string, overrides?: CallOverrides): Promise<string>;

  template(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    createTandaDAO(
      _id: string,
      _members: string[],
      _votingSettings: [BigNumberish, BigNumberish, BigNumberish],
      host: string,
      cfa: string,
      acceptedToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    daoToTanda(arg0: string, overrides?: CallOverrides): Promise<string>;

    template(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "TandaDAOCreated(string,address)"(
      id?: null,
      tanda?: null
    ): TandaDAOCreatedEventFilter;
    TandaDAOCreated(id?: null, tanda?: null): TandaDAOCreatedEventFilter;
  };

  estimateGas: {
    createTandaDAO(
      _id: string,
      _members: string[],
      _votingSettings: [BigNumberish, BigNumberish, BigNumberish],
      host: string,
      cfa: string,
      acceptedToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    daoToTanda(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    template(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    createTandaDAO(
      _id: string,
      _members: string[],
      _votingSettings: [BigNumberish, BigNumberish, BigNumberish],
      host: string,
      cfa: string,
      acceptedToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    daoToTanda(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    template(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
