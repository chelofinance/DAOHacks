/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  AppStorage,
  AppStorageInterface,
} from "../../../../../@aragon/os/contracts/apps/AppStorage";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "appId",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kernel",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018b806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806380afdea814610051578063d4aae0c414610084575b600080fd5b34801561005d57600080fd5b506100666100db565b60405180826000191660001916815260200191505060405180910390f35b34801561009057600080fd5b50610099610112565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600061010d7fd625496217aa6a3453eecb9c3489dc5a53e6c67b444329ea2b2cbc9ff547639b60010260001916610149565b905090565b60006101447f4172f0f7d2289153072b0a6ca36959e0cbe2efc3afe50fc81636caa96338137b60010260001916610154565b905090565b600081549050919050565b6000815490509190505600a165627a7a72305820d900ab40628a320c51f328b427ba8247f413fccdb60a472c54e4ccab668e9fb70029";

type AppStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AppStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AppStorage__factory extends ContractFactory {
  constructor(...args: AppStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AppStorage> {
    return super.deploy(overrides || {}) as Promise<AppStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AppStorage {
    return super.attach(address) as AppStorage;
  }
  override connect(signer: Signer): AppStorage__factory {
    return super.connect(signer) as AppStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppStorageInterface {
    return new utils.Interface(_abi) as AppStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AppStorage {
    return new Contract(address, _abi, signerOrProvider) as AppStorage;
  }
}
