/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UUPSProxy,
  UUPSProxyInterface,
} from "../../../../../@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxy";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a5806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d9190610259565b61007e565b005b61006c610170565b61007c610077610172565b610181565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e5906102e3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010e6101a7565b73ffffffffffffffffffffffffffffffffffffffff1614610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b9061034f565b60405180910390fd5b61016d816101d0565b50565b565b600061017c6101a7565b905090565b3660008037600080366000845af43d6000803e80600081146101a2573d6000f35b3d6000fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610226826101fb565b9050919050565b6102368161021b565b811461024157600080fd5b50565b6000813590506102538161022d565b92915050565b60006020828403121561026f5761026e6101f6565b5b600061027d84828501610244565b91505092915050565b600082825260208201905092915050565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b60006102cd601783610286565b91506102d882610297565b602082019050919050565b600060208201905081810360008301526102fc816102c0565b9050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b6000610339601e83610286565b915061034482610303565b602082019050919050565b600060208201905081810360008301526103688161032c565b905091905056fea264697066735822122060f2d89232d2eb6b9c25e9b8195e6a33a372ae78392d399914ea600a45dbf53464736f6c634300080c0033";

type UUPSProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UUPSProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UUPSProxy__factory extends ContractFactory {
  constructor(...args: UUPSProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSProxy> {
    return super.deploy(overrides || {}) as Promise<UUPSProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UUPSProxy {
    return super.attach(address) as UUPSProxy;
  }
  override connect(signer: Signer): UUPSProxy__factory {
    return super.connect(signer) as UUPSProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UUPSProxyInterface {
    return new utils.Interface(_abi) as UUPSProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSProxy {
    return new Contract(address, _abi, signerOrProvider) as UUPSProxy;
  }
}
