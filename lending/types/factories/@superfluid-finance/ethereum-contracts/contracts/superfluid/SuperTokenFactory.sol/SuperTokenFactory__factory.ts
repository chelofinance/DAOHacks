/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  SuperTokenFactory,
  SuperTokenFactoryInterface,
} from "../../../../../../@superfluid-finance/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol/SuperTokenFactory";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract SuperTokenFactoryHelper",
        name: "helper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "codeAddress",
        type: "address",
      },
    ],
    name: "CodeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
    ],
    name: "CustomSuperTokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperToken",
        name: "token",
        type: "address",
      },
    ],
    name: "SuperTokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperToken",
        name: "tokenLogic",
        type: "address",
      },
    ],
    name: "SuperTokenLogicCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20WithTokenInfo",
        name: "underlyingToken",
        type: "address",
      },
      {
        internalType: "enum ISuperTokenFactory.Upgradability",
        name: "upgradability",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "createERC20Wrapper",
    outputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "underlyingToken",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "underlyingDecimals",
        type: "uint8",
      },
      {
        internalType: "enum ISuperTokenFactory.Upgradability",
        name: "upgradability",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "createERC20Wrapper",
    outputs: [
      {
        internalType: "contract ISuperToken",
        name: "superToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
    ],
    name: "createSuperTokenLogic",
    outputs: [
      {
        internalType: "address",
        name: "logic",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCodeAddress",
    outputs: [
      {
        internalType: "address",
        name: "codeAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHost",
    outputs: [
      {
        internalType: "address",
        name: "host",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSuperTokenLogic",
    outputs: [
      {
        internalType: "contract ISuperToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customSuperTokenProxy",
        type: "address",
      },
    ],
    name: "initializeCustomSuperToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "updateCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200214e3803806200214e83398181016040528101906200003791906200016c565b818073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000db82620000ae565b9050919050565b6000620000ef82620000ce565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b60006200013482620000ce565b9050919050565b620001468162000127565b81146200015257600080fd5b50565b60008151905062000166816200013b565b92915050565b60008060408385031215620001865762000185620000a9565b5b6000620001968582860162000110565b9250506020620001a98582860162000155565b9150509250929050565b60805160a051611f60620001ee60003960006103460152600081816101f1015281816102a2015281816105ef0152610b9a0152611f606000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806352d1902d1161006657806352d1902d1461015b5780638129fc1c146101795780639470a5b214610183578063a6d0c534146101a1578063d412d344146101d15761009e565b806320bc4425146100a3578063431f1481146100c157806346951954146100f15780634dcc4d791461010d57806350d75d251461013d575b600080fd5b6100ab6101ed565b6040516100b89190610d9d565b60405180910390f35b6100db60048036038101906100d69190610e8a565b610215565b6040516100e89190610f90565b60405180910390f35b61010b60048036038101906101069190610fd7565b6102a0565b005b61012760048036038101906101229190611042565b610342565b6040516101349190610d9d565b60405180910390f35b6101456103e7565b6040516101529190610d9d565b60405180910390f35b6101636103f6565b6040516101709190611088565b60405180910390f35b61018161041e565b005b61018b61050a565b6040516101989190610f90565b60405180910390f35b6101bb60048036038101906101b6919061111a565b610533565b6040516101c89190610f90565b60405180910390f35b6101eb60048036038101906101e69190610fd7565b6108ba565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000610294878873ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a91906111eb565b8888888888610533565b90509695505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103259061129b565b60405180910390fd5b61033781610993565b61033f610b7c565b50565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639ed93318836040518263ffffffff1660e01b815260040161039d91906112dc565b6020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e0919061130c565b9050919050565b60006103f1610cbf565b905090565b60007fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620905090565b600060019054906101000a900460ff166104465760008054906101000a900460ff161561044f565b61044e610ce8565b5b61048e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610485906113ab565b60405180910390fd5b60008060019054906101000a900460ff1615905080156104de576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6104e6610b7c565b80156105075760008060016101000a81548160ff0219169083151502179055505b50565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90611417565b60405180910390fd5b600060028111156105b8576105b7611437565b5b8660028111156105cb576105ca611437565b5b1415610674573073ffffffffffffffffffffffffffffffffffffffff16634dcc4d797f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161062a91906112dc565b6020604051808303816000875af1158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d919061130c565b90506107f7565b6001600281111561068857610687611437565b5b86600281111561069b5761069a611437565b5b14156107645760006040516106af90610d42565b604051809103906000f0801580156106cb573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16634a0687ef600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016107299190610d9d565b600060405180830381600087803b15801561074357600080fd5b505af1158015610757573d6000803e3d6000fd5b50505050809150506107f6565b600060405161077290610d4f565b604051809103906000f08015801561078e573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b50505050809150505b5b8073ffffffffffffffffffffffffffffffffffffffff166342fe09808989888888886040518763ffffffff1660e01b815260040161083a969594939291906114e3565b600060405180830381600087803b15801561085457600080fd5b505af1158015610868573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff167fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f60405160405180910390a2979650505050505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff16634a0687ef600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161091a9190610d9d565b600060405180830381600087803b15801561093457600080fd5b505af1158015610948573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a560405160405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff166109b3610cbf565b73ffffffffffffffffffffffffffffffffffffffff161415610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0190611586565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7991906115d2565b610a816103f6565b14610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab890611671565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b27906116dd565b60405180910390fd5b610b3981610cf9565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc610b626103f6565b82604051610b719291906116fd565b60405180910390a150565b3073ffffffffffffffffffffffffffffffffffffffff16634dcc4d797f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610bd591906112dc565b6020604051808303816000875af1158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c18919061130c565b600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b87402978360405160405180910390a2565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b6000610cf330610d1f565b15905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6103c58061172783390190565b61043f80611aec83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8782610d5c565b9050919050565b610d9781610d7c565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b600080fd5b600080fd5b6000610dcd82610d7c565b9050919050565b610ddd81610dc2565b8114610de857600080fd5b50565b600081359050610dfa81610dd4565b92915050565b60038110610e0d57600080fd5b50565b600081359050610e1f81610e00565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e4a57610e49610e25565b5b8235905067ffffffffffffffff811115610e6757610e66610e2a565b5b602083019150836001820283011115610e8357610e82610e2f565b5b9250929050565b60008060008060008060808789031215610ea757610ea6610db8565b5b6000610eb589828a01610deb565b9650506020610ec689828a01610e10565b955050604087013567ffffffffffffffff811115610ee757610ee6610dbd565b5b610ef389828a01610e34565b9450945050606087013567ffffffffffffffff811115610f1657610f15610dbd565b5b610f2289828a01610e34565b92509250509295509295509295565b6000819050919050565b6000610f56610f51610f4c84610d5c565b610f31565b610d5c565b9050919050565b6000610f6882610f3b565b9050919050565b6000610f7a82610f5d565b9050919050565b610f8a81610f6f565b82525050565b6000602082019050610fa56000830184610f81565b92915050565b610fb481610d7c565b8114610fbf57600080fd5b50565b600081359050610fd181610fab565b92915050565b600060208284031215610fed57610fec610db8565b5b6000610ffb84828501610fc2565b91505092915050565b600061100f82610d7c565b9050919050565b61101f81611004565b811461102a57600080fd5b50565b60008135905061103c81611016565b92915050565b60006020828403121561105857611057610db8565b5b60006110668482850161102d565b91505092915050565b6000819050919050565b6110828161106f565b82525050565b600060208201905061109d6000830184611079565b92915050565b60006110ae82610d7c565b9050919050565b6110be816110a3565b81146110c957600080fd5b50565b6000813590506110db816110b5565b92915050565b600060ff82169050919050565b6110f7816110e1565b811461110257600080fd5b50565b600081359050611114816110ee565b92915050565b600080600080600080600060a0888a03121561113957611138610db8565b5b60006111478a828b016110cc565b97505060206111588a828b01611105565b96505060406111698a828b01610e10565b955050606088013567ffffffffffffffff81111561118a57611189610dbd565b5b6111968a828b01610e34565b9450945050608088013567ffffffffffffffff8111156111b9576111b8610dbd565b5b6111c58a828b01610e34565b925092505092959891949750929550565b6000815190506111e5816110ee565b92915050565b60006020828403121561120157611200610db8565b5b600061120f848285016111d6565b91505092915050565b600082825260208201905092915050565b7f5375706572546f6b656e466163746f72793a206f6e6c7920686f73742063616e60008201527f2075706461746520636f64650000000000000000000000000000000000000000602082015250565b6000611285602c83611218565b915061129082611229565b604082019050919050565b600060208201905081810360008301526112b481611278565b9050919050565b60006112c682610f5d565b9050919050565b6112d6816112bb565b82525050565b60006020820190506112f160008301846112cd565b92915050565b60008151905061130681610fab565b92915050565b60006020828403121561132257611321610db8565b5b6000611330848285016112f7565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611395602e83611218565b91506113a082611339565b604082019050919050565b600060208201905081810360008301526113c481611388565b9050919050565b7f5375706572546f6b656e466163746f72793a207a65726f206164647265737300600082015250565b6000611401601f83611218565b915061140c826113cb565b602082019050919050565b60006020820190508181036000830152611430816113f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061147182610f5d565b9050919050565b61148181611466565b82525050565b611490816110e1565b82525050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006114c28385611218565b93506114cf838584611496565b6114d8836114a5565b840190509392505050565b60006080820190506114f86000830189611478565b6115056020830188611487565b81810360408301526115188186886114b6565b9050818103606083015261152d8184866114b6565b9050979650505050505050565b7f5555505350726f786961626c653a206e6f742075706772616461626c65000000600082015250565b6000611570601d83611218565b915061157b8261153a565b602082019050919050565b6000602082019050818103600083015261159f81611563565b9050919050565b6115af8161106f565b81146115ba57600080fd5b50565b6000815190506115cc816115a6565b92915050565b6000602082840312156115e8576115e7610db8565b5b60006115f6848285016115bd565b91505092915050565b7f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60008201527f6769630000000000000000000000000000000000000000000000000000000000602082015250565b600061165b602383611218565b9150611666826115ff565b604082019050919050565b6000602082019050818103600083015261168a8161164e565b9050919050565b7f5555505350726f786961626c653a2070726f7879206c6f6f7000000000000000600082015250565b60006116c7601983611218565b91506116d282611691565b602082019050919050565b600060208201905081810360008301526116f6816116ba565b9050919050565b60006040820190506117126000830185611079565b61171f6020830184610d8e565b939250505056fe608060405234801561001057600080fd5b506103a5806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d9190610259565b61007e565b005b61006c610170565b61007c610077610172565b610181565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e5906102e3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010e6101a7565b73ffffffffffffffffffffffffffffffffffffffff1614610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b9061034f565b60405180910390fd5b61016d816101d0565b50565b565b600061017c6101a7565b905090565b3660008037600080366000845af43d6000803e80600081146101a2573d6000f35b3d6000fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610226826101fb565b9050919050565b6102368161021b565b811461024157600080fd5b50565b6000813590506102538161022d565b92915050565b60006020828403121561026f5761026e6101f6565b5b600061027d84828501610244565b91505092915050565b600082825260208201905092915050565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b60006102cd601783610286565b91506102d882610297565b602082019050919050565b600060208201905081810360008301526102fc816102c0565b9050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b6000610339601e83610286565b915061034482610303565b602082019050919050565b600060208201905081810360008301526103688161032c565b905091905056fea264697066735822122060f2d89232d2eb6b9c25e9b8195e6a33a372ae78392d399914ea600a45dbf53464736f6c634300080c0033608060405234801561001057600080fd5b5061041f806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003b57610031565b366100315761002f610052565b005b610039610052565b005b34801561004757600080fd5b5061005061006c565b005b61005a61012a565b61006a61006561012c565b610238565b565b60007fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f8906102bb565b60405180910390fd5b339050807fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a05550565b565b6000807fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90610327565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023291906103bc565b91505090565b3660008037600080366000845af43d6000803e8060008114610259573d6000f35b3d6000fd5b600082825260208201905092915050565b7f416c726561647920696e697469616c697a656400000000000000000000000000600082015250565b60006102a560138361025e565b91506102b08261026f565b602082019050919050565b600060208201905081810360008301526102d481610298565b9050919050565b7f4e6f7420696e697469616c697a65640000000000000000000000000000000000600082015250565b6000610311600f8361025e565b915061031c826102db565b602082019050919050565b6000602082019050818103600083015261034081610304565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103778261034c565b9050919050565b60006103898261036c565b9050919050565b6103998161037e565b81146103a457600080fd5b50565b6000815190506103b681610390565b92915050565b6000602082840312156103d2576103d1610347565b5b60006103e0848285016103a7565b9150509291505056fea2646970667358221220a6e53f647438eedaacb79c92883222f11ffa3e92a506945a252eaa1cf965a6ed64736f6c634300080c0033a2646970667358221220d9aa097e74b3e5a4e35d29e588142bfbd49f17fde5f17f4f4e3d42e3f608ad7564736f6c634300080c0033";

type SuperTokenFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuperTokenFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuperTokenFactory__factory extends ContractFactory {
  constructor(...args: SuperTokenFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    host: string,
    helper: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SuperTokenFactory> {
    return super.deploy(
      host,
      helper,
      overrides || {}
    ) as Promise<SuperTokenFactory>;
  }
  override getDeployTransaction(
    host: string,
    helper: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(host, helper, overrides || {});
  }
  override attach(address: string): SuperTokenFactory {
    return super.attach(address) as SuperTokenFactory;
  }
  override connect(signer: Signer): SuperTokenFactory__factory {
    return super.connect(signer) as SuperTokenFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuperTokenFactoryInterface {
    return new utils.Interface(_abi) as SuperTokenFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuperTokenFactory {
    return new Contract(address, _abi, signerOrProvider) as SuperTokenFactory;
  }
}
