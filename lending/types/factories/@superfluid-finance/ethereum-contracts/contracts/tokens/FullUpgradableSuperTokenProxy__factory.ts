/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FullUpgradableSuperTokenProxy,
  FullUpgradableSuperTokenProxyInterface,
} from "../../../../../@superfluid-finance/ethereum-contracts/contracts/tokens/FullUpgradableSuperTokenProxy";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061041f806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003b57610031565b366100315761002f610052565b005b610039610052565b005b34801561004757600080fd5b5061005061006c565b005b61005a61012a565b61006a61006561012c565b610238565b565b60007fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f8906102bb565b60405180910390fd5b339050807fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a05550565b565b6000807fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90610327565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561020e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023291906103bc565b91505090565b3660008037600080366000845af43d6000803e8060008114610259573d6000f35b3d6000fd5b600082825260208201905092915050565b7f416c726561647920696e697469616c697a656400000000000000000000000000600082015250565b60006102a560138361025e565b91506102b08261026f565b602082019050919050565b600060208201905081810360008301526102d481610298565b9050919050565b7f4e6f7420696e697469616c697a65640000000000000000000000000000000000600082015250565b6000610311600f8361025e565b915061031c826102db565b602082019050919050565b6000602082019050818103600083015261034081610304565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103778261034c565b9050919050565b60006103898261036c565b9050919050565b6103998161037e565b81146103a457600080fd5b50565b6000815190506103b681610390565b92915050565b6000602082840312156103d2576103d1610347565b5b60006103e0848285016103a7565b9150509291505056fea2646970667358221220a6e53f647438eedaacb79c92883222f11ffa3e92a506945a252eaa1cf965a6ed64736f6c634300080c0033";

type FullUpgradableSuperTokenProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FullUpgradableSuperTokenProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FullUpgradableSuperTokenProxy__factory extends ContractFactory {
  constructor(...args: FullUpgradableSuperTokenProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FullUpgradableSuperTokenProxy> {
    return super.deploy(
      overrides || {}
    ) as Promise<FullUpgradableSuperTokenProxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FullUpgradableSuperTokenProxy {
    return super.attach(address) as FullUpgradableSuperTokenProxy;
  }
  override connect(signer: Signer): FullUpgradableSuperTokenProxy__factory {
    return super.connect(signer) as FullUpgradableSuperTokenProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FullUpgradableSuperTokenProxyInterface {
    return new utils.Interface(_abi) as FullUpgradableSuperTokenProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FullUpgradableSuperTokenProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FullUpgradableSuperTokenProxy;
  }
}
